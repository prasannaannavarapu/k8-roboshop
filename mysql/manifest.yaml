apiVersion: v1
kind: ConfigMap # First creating the ConfigMap to store ENV variable
metadata:
  name: mysql
  namespace: roboshop
data:
  MYSQL_DATABASE: "cities"
---
apiVersion: v1    #Secrets adding mysql password here with encoded value 
kind: Secret
metadata:
  name: mysql
  namespace: roboshop
type: Opaque
data:
  MYSQL_ROOT_PASSWORD: Um9ib1Nob3BAMQ==
  MYSQL_USER: c2hpcHBpbmc=
  MYSQL_PASSWORD: Um9ib1Nob3BAMQ==
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: roboshop
  labels:                  #These labels are deploymnet labels
    app: mysql
    project: roboshop
    tier: db               # Deploymnet
spec:
  replicas: 1
  selector:
    matchLabels:      
        app: mysql         # These labels are used to find the pods
        project: roboshop
        tier: db           # Replica set
  template:
    metadata:
      labels:
        app: mysql       # These labels are used to find the pods
        project: roboshop
        tier: db           # Pod definition,  Pod is a subset of deploymnet
    spec:
      containers:
      - name: mysql
        image: prasannaannavarapu/mysql:v1
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: mysql
        - secretRef:
            name: mysql
---
# pod to pod communication for mysql is no need to communicate outside so we use cluster-ip service.
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: roboshop
spec:
  selector:
    app: mysql
    project: roboshop
    tier: db 
  ports:
  - protocol: TCP
    port: 3306 #service-port
    targetPort: 3306 #container-port

#deployment is created and Replica is created and Pod is created and That pod is attaching to the clister-ip service    
#kubectl apply -f manifest.yaml
#kubectl get deploymnets -n roboshop
#kubectl get services -n roboshop
##kubectl get pods -n roboshop
#kubectl -exec -it mysql -- sh
  #mysql -u shipping -pRoboShop@1
  #show databases
  #use cities
  #show tables
  #exit


